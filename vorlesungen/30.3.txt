Funktionsaufruf mit Seiteneffekt:
1. Referenzparameter
 * testbar
 * flexibel
 * klar, was geändert wird
2. Globale Variabeln
 * unklar, wo was geändert wird
 
Polimorphie
1. Dynamisch
 * zur Laufzeit
 * "Vererbung"
2. Statisch
 * zur Compilierzeit
 * bsp: überladen von funktionen f(int); f(double); f(bool);
  -> anhand parameter unterscheidbar
  -> problem (ambiguous(mehrdeutige) functions)
 * bsp: funktion übergeben
  -> int foo(int x)){ return x * 2; };
  -> void doit(int i, int f(int)){ f(i) };
  -> doit(10, foo); // returns 2 * 10 = 20
  -> bsp: sort (rückgabetyp bool = prädikat)
  -> for_each

